{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view"],"sources":["D:\\当下文件\\python\\Bridge-1\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted } from 'vue';\r\nimport { useUserStore } from '@/store/user';\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  name: 'App',\r\n  setup() {\r\n    const userStore = useUserStore(); \r\n\r\n    onMounted(() => {\r\n      const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n      const currentPath = router.currentRoute.value.path;\r\n\r\n      if (!isLoggedIn && currentPath !== '/login' && currentPath !== '/register') {\r\n        router.push('/login');\r\n      } else if (isLoggedIn) {\r\n        userStore.setUserInfo(JSON.parse(localStorage.getItem('userInfo'))); \r\n      }\r\n    });\r\n\r\n    \r\n    // 拦截所有axios请求，检查响应状态码\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        if (error.response && error.response.status === 403) {\r\n          // 如果接收到403状态码，自动注销用户并跳转到登录页面\r\n          Swal.fire({\r\n            title: '登录状态过期',\r\n            text: '当前登录状态已过期，请重新登录',\r\n            icon: 'warning',\r\n            confirmButtonText: '确定'\r\n          }).then(() => {\r\n            localStorage.clear();\r\n            router.push('/login');\r\n          });\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  },  \r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}