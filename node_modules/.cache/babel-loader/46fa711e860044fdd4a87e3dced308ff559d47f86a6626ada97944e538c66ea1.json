{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useUserStore } from '@/store/user';\nimport { useRouter, useRoute } from 'vue-router';\nimport axios from '@/api/axios';\nimport Swal from 'sweetalert2';\nexport default {\n  setup() {\n    const userStore = useUserStore();\n    const userInfo = userStore.userInfo;\n    const router = useRouter();\n    const route = useRoute();\n    const isActive = name => {\n      return route.matched.some(record => record.name === name);\n    };\n    const reset = async () => {\n      const confirmation = await Swal.fire({\n        title: '确认重置',\n        text: '您确定要重置为新的一轮吗？',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      });\n      if (confirmation.isConfirmed) {\n        try {\n          const response = await axios.get('/users/new_rounds/', {\n            withCredentials: true\n          });\n          const data = response.data;\n          if (data.restronundmum > 0) {\n            // 有重开次数的情况\n            Swal.fire({\n              title: '成功!',\n              html: `${data.state}<br>请注意剩余次数为 ${data.restronundmum} 次`,\n              icon: 'success',\n              confirmButtonText: '确定'\n            }).then(() => {\n              // 重置周期\n              const userInfoString = localStorage.getItem('userInfo');\n              const userInfoObject = JSON.parse(userInfoString);\n              userInfoObject.cycle = 1;\n              localStorage.setItem('userInfo', JSON.stringify(userInfoObject));\n              // 自动刷新页面\n              window.location.reload();\n            });\n          } else {\n            // 没有重开次数的情况\n            Swal.fire({\n              title: '已达上限!',\n              text: data.state,\n              icon: 'info',\n              confirmButtonText: '确定'\n            });\n          }\n        } catch (error) {\n          console.error('请求错误:', error);\n          Swal.fire({\n            title: '请求失败!',\n            text: '请求后台失败，请稍后重试。',\n            icon: 'error',\n            confirmButtonText: '确定'\n          });\n        }\n      }\n    };\n\n    // 注销用户\n    const logout = async () => {\n      const confirmation = await Swal.fire({\n        title: '确认注销',\n        text: '您确定要注销账户吗？',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      });\n      if (confirmation.isConfirmed) {\n        try {\n          const response = await axios.get('/users/loginout/', {\n            withCredentials: true\n          });\n          const {\n            status\n          } = response;\n          if (status === 200) {\n            Swal.fire({\n              title: '注销成功',\n              icon: 'success'\n            });\n            localStorage.clear();\n            router.push('/login');\n          }\n        } catch (error) {\n          Swal.fire({\n            title: '注销失败',\n            text: error.response ? error.response.data.message : '发生错误，请重试',\n            icon: 'error'\n          });\n        }\n      }\n    };\n    return {\n      userInfo,\n      reset,\n      logout,\n      isActive\n    };\n  }\n};","map":{"version":3,"names":["useUserStore","useRouter","useRoute","axios","Swal","setup","userStore","userInfo","router","route","isActive","name","matched","some","record","reset","confirmation","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","response","get","withCredentials","data","restronundmum","html","state","then","userInfoString","localStorage","getItem","userInfoObject","JSON","parse","cycle","setItem","stringify","window","location","reload","error","console","logout","status","clear","push","message"],"sources":["D:\\当下文件\\python\\Bridge-1\\src\\components\\MainLayout.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 全局导航栏 -->\r\n    <nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <!-- 网页链接 -->\r\n        <router-link class=\"navbar-brand\" to=\"/\" >\r\n          <img src=\"@/assets/info.gif\" alt=\"ICEDSS\" width=\"40\" height=\"40\">\r\n          JCTD\r\n        </router-link>\r\n\r\n        <!-- 触发按钮，用于小屏幕设备 -->\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <!-- 折叠的导航内容 -->\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul class=\"navbar-nav me-auto\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" :class=\"{ active: isActive('Decision') }\" to=\"/decision\">决策仿真</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" :class=\"{ active: isActive('Important') }\" to=\"/important/rule\">重要信息</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button @click=\"reset\" class=\"btn btn-danger\" style=\"padding: 5px; margin: 5px;\">\r\n                新的一轮\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item\">\r\n              <div class=\"info\" style=\"border: 1px solid #ccc; padding: 5px; margin: 5px; border-radius: 20px;\">\r\n                当前：\r\n                第<span class=\"text-danger\">{{ userInfo?.group }}</span>组\r\n                第<span class=\"text-danger\">{{ userInfo?.number }}</span>企业\r\n                <span class=\"text-danger\">{{ userInfo?.rival }}</span>位竞争对手\r\n                <span v-if=\"userInfo?.cycle !== 8\">第<span class=\"text-danger\">{{ userInfo?.cycle }}</span>周期</span>\r\n              </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button @click=\"logout\" class=\"nav-link\">注销</button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" :class=\"{ active: isActive('Profile') }\" to=\"/profile\">我的资料</router-link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>  \r\n\r\n    <!-- 子路由内容 -->\r\n    <div class=\"container-fluid\">\r\n      <router-view />\r\n    </div>\r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport { useUserStore } from '@/store/user';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport axios from '@/api/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  setup() {\r\n    const userStore = useUserStore();\r\n    const userInfo = userStore.userInfo;\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n\r\n    const isActive = (name) => {\r\n      return route.matched.some(record => record.name === name);\r\n    };\r\n\r\n    const reset = async () => {\r\n      const confirmation = await Swal.fire({\r\n        title: '确认重置',\r\n        text: '您确定要重置为新的一轮吗？',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消'\r\n      });\r\n\r\n      if (confirmation.isConfirmed) {\r\n        try {\r\n          const response = await axios.get('/users/new_rounds/', { withCredentials: true });\r\n          const data = response.data;\r\n\r\n          if (data.restronundmum > 0) {\r\n            // 有重开次数的情况\r\n            Swal.fire({\r\n              title: '成功!',\r\n              html: `${data.state}<br>请注意剩余次数为 ${data.restronundmum} 次`,\r\n              icon: 'success',\r\n              confirmButtonText: '确定'\r\n            }).then(() => {\r\n              // 重置周期\r\n              const userInfoString = localStorage.getItem('userInfo');\r\n              const userInfoObject = JSON.parse(userInfoString);\r\n              userInfoObject.cycle = 1;\r\n              localStorage.setItem('userInfo', JSON.stringify(userInfoObject));\r\n              // 自动刷新页面\r\n              window.location.reload();\r\n            });\r\n          } else {\r\n            // 没有重开次数的情况\r\n            Swal.fire({\r\n              title: '已达上限!',\r\n              text: data.state,\r\n              icon: 'info',\r\n              confirmButtonText: '确定'\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('请求错误:', error);\r\n          Swal.fire({\r\n            title: '请求失败!',\r\n            text: '请求后台失败，请稍后重试。',\r\n            icon: 'error',\r\n            confirmButtonText: '确定'\r\n          });\r\n        }\r\n      }\r\n    };\r\n    \r\n    // 注销用户\r\n    const logout = async () => {\r\n      const confirmation = await Swal.fire({\r\n        title: '确认注销',\r\n        text: '您确定要注销账户吗？',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消'\r\n      });\r\n\r\n      if (confirmation.isConfirmed) {\r\n        try {\r\n          const response = await axios.get('/users/loginout/', {\r\n            withCredentials: true \r\n          });\r\n\r\n          const { status } = response;\r\n          if (status === 200) {\r\n            Swal.fire({\r\n              title: '注销成功',\r\n              icon: 'success'\r\n            });\r\n\r\n            localStorage.clear();\r\n            router.push('/login');\r\n          }\r\n        } catch (error) {\r\n          Swal.fire({\r\n            title: '注销失败',\r\n            text: error.response ? error.response.data.message : '发生错误，请重试',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    return {\r\n      userInfo,\r\n      reset,\r\n      logout,\r\n      isActive\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.nav-link {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.nav-link:hover {\r\n  background-color: #3c3737;\r\n}\r\n\r\n.nav-link.active {\r\n  background-color: #3c3737;\r\n}\r\n\r\n.nav-item {\r\n  color: #ffffff;\r\n}\r\n</style>"],"mappings":";AA4DA,SAASA,YAAW,QAAS,cAAc;AAC3C,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,OAAOC,KAAI,MAAO,aAAa;AAC/B,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIN,YAAY,CAAC,CAAC;IAChC,MAAMO,QAAO,GAAID,SAAS,CAACC,QAAQ;IACnC,MAAMC,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,KAAI,GAAIP,QAAQ,CAAC,CAAC;IAExB,MAAMQ,QAAO,GAAKC,IAAI,IAAK;MACzB,OAAOF,KAAK,CAACG,OAAO,CAACC,IAAI,CAACC,MAAK,IAAKA,MAAM,CAACH,IAAG,KAAMA,IAAI,CAAC;IAC3D,CAAC;IAED,MAAMI,KAAI,GAAI,MAAAA,CAAA,KAAY;MACxB,MAAMC,YAAW,GAAI,MAAMZ,IAAI,CAACa,IAAI,CAAC;QACnCC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,IAAIP,YAAY,CAACQ,WAAW,EAAE;QAC5B,IAAI;UACF,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAC,oBAAoB,EAAE;YAAEC,eAAe,EAAE;UAAK,CAAC,CAAC;UACjF,MAAMC,IAAG,GAAIH,QAAQ,CAACG,IAAI;UAE1B,IAAIA,IAAI,CAACC,aAAY,GAAI,CAAC,EAAE;YAC1B;YACAzB,IAAI,CAACa,IAAI,CAAC;cACRC,KAAK,EAAE,KAAK;cACZY,IAAI,EAAE,GAAGF,IAAI,CAACG,KAAK,gBAAgBH,IAAI,CAACC,aAAa,IAAI;cACzDT,IAAI,EAAE,SAAS;cACfE,iBAAiB,EAAE;YACrB,CAAC,CAAC,CAACU,IAAI,CAAC,MAAM;cACZ;cACA,MAAMC,cAAa,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;cACvD,MAAMC,cAAa,GAAIC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;cACjDG,cAAc,CAACG,KAAI,GAAI,CAAC;cACxBL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAACL,cAAc,CAAC,CAAC;cAChE;cACAM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;YAC1B,CAAC,CAAC;UACJ,OAAO;YACL;YACAxC,IAAI,CAACa,IAAI,CAAC;cACRC,KAAK,EAAE,OAAO;cACdC,IAAI,EAAES,IAAI,CAACG,KAAK;cAChBX,IAAI,EAAE,MAAM;cACZE,iBAAiB,EAAE;YACrB,CAAC,CAAC;UACJ;QACF,EAAE,OAAOuB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;UAC7BzC,IAAI,CAACa,IAAI,CAAC;YACRC,KAAK,EAAE,OAAO;YACdC,IAAI,EAAE,eAAe;YACrBC,IAAI,EAAE,OAAO;YACbE,iBAAiB,EAAE;UACrB,CAAC,CAAC;QACJ;MACF;IACF,CAAC;;IAED;IACA,MAAMyB,MAAK,GAAI,MAAAA,CAAA,KAAY;MACzB,MAAM/B,YAAW,GAAI,MAAMZ,IAAI,CAACa,IAAI,CAAC;QACnCC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,YAAY;QAClBC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,IAAIP,YAAY,CAACQ,WAAW,EAAE;QAC5B,IAAI;UACF,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAC,kBAAkB,EAAE;YACnDC,eAAe,EAAE;UACnB,CAAC,CAAC;UAEF,MAAM;YAAEqB;UAAO,IAAIvB,QAAQ;UAC3B,IAAIuB,MAAK,KAAM,GAAG,EAAE;YAClB5C,IAAI,CAACa,IAAI,CAAC;cACRC,KAAK,EAAE,MAAM;cACbE,IAAI,EAAE;YACR,CAAC,CAAC;YAEFc,YAAY,CAACe,KAAK,CAAC,CAAC;YACpBzC,MAAM,CAAC0C,IAAI,CAAC,QAAQ,CAAC;UACvB;QACF,EAAE,OAAOL,KAAK,EAAE;UACdzC,IAAI,CAACa,IAAI,CAAC;YACRC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE0B,KAAK,CAACpB,QAAO,GAAIoB,KAAK,CAACpB,QAAQ,CAACG,IAAI,CAACuB,OAAM,GAAI,UAAU;YAC/D/B,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF;IACF,CAAC;IAED,OAAO;MACLb,QAAQ;MACRQ,KAAK;MACLgC,MAAM;MACNrC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}