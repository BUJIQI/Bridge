{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from '@/api/axios';\nimport { useRouter } from 'vue-router';\nimport Swal from 'sweetalert2';\nexport default {\n  setup() {\n    const router = useRouter();\n    const className = ref('');\n    const studentID = ref('');\n    const name = ref('');\n    const teamName = ref('');\n    const password = ref('');\n    const phone = ref('');\n    const email = ref('');\n    const register = async () => {\n      const payload = {\n        classid: className.value,\n        studentid: studentID.value,\n        name: name.value,\n        teamname: teamName.value,\n        pwd: password.value,\n        phone: phone.value,\n        email: email.value\n      };\n      try {\n        const response = await axios.post('/users/register/', payload, {\n          withCredentials: true\n        });\n        if (response.data.status === 'True') {\n          const group = response.data.data.group;\n          const number = response.data.data.number;\n          Swal.fire({\n            title: '提示',\n            text: `注册成功，编号为第${group}组第${number}企业！`,\n            icon: 'success'\n          });\n          setTimeout(goToLogin, 4000); // 注册成功后跳转到登录页\n        } else {\n          Swal.fire({\n            title: '提示',\n            text: response.data.data.registertxt || '未知错误',\n            // 显示注册失败的信息\n            icon: 'error'\n          });\n        }\n      } catch (error) {\n        console.error(error); // 记录错误信息\n        Swal.fire({\n          title: '提示',\n          text: '注册失败，请重试！',\n          // 设置错误提示\n          icon: 'error'\n        });\n      }\n    };\n    const goToLogin = () => {\n      router.push('/login');\n    };\n    return {\n      className,\n      studentID,\n      name,\n      teamName,\n      password,\n      phone,\n      register,\n      goToLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","Swal","setup","router","className","studentID","name","teamName","password","phone","email","register","payload","classid","value","studentid","teamname","pwd","response","post","withCredentials","data","status","group","number","fire","title","text","icon","setTimeout","goToLogin","registertxt","error","console","push"],"sources":["D:\\当下文件\\python\\Bridge-1\\src\\components\\UserRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h2 class=\"mb-4\">注册</h2>\r\n        <form @submit.prevent=\"register\">\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"className\" class=\"col-sm-3 col-form-label\">班级:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" id=\"className\" v-model=\"className\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"studentID\" class=\"col-sm-3 col-form-label\">学号:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" id=\"studentID\" v-model=\"studentID\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"name\" class=\"col-sm-3 col-form-label\">姓名:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" id=\"name\" v-model=\"name\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"teamName\" class=\"col-sm-3 col-form-label\">队名:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" id=\"teamName\" v-model=\"teamName\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"password\" class=\"col-sm-3 col-form-label\">密码:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"phone\" class=\"col-sm-3 col-form-label\">手机:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"tel\" id=\"phone\" v-model=\"phone\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"email\" class=\"col-sm-3 col-form-label\">邮箱:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"email\" id=\"email\" v-model=\"email\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"button-container text-center\">\r\n                <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"goToLogin\">返回登录</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"register-btn\">注册</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from '@/api/axios';\r\nimport { useRouter } from 'vue-router';\r\nimport Swal from 'sweetalert2'; \r\n\r\nexport default {\r\n    setup() {\r\n        const router = useRouter();       \r\n        const className = ref('');\r\n        const studentID = ref('');\r\n        const name = ref('');\r\n        const teamName = ref('');\r\n        const password = ref('');\r\n        const phone = ref('');\r\n        const email = ref('');\r\n        \r\n        const register = async () => {\r\n            const payload = {\r\n                classid: className.value,\r\n                studentid: studentID.value,\r\n                name: name.value,\r\n                teamname: teamName.value,\r\n                pwd: password.value,\r\n                phone: phone.value,\r\n                email: email.value\r\n            };\r\n            try {\r\n                const response = await axios.post('/users/register/', payload, {\r\n                    withCredentials: true,\r\n                });\r\n                if (response.data.status === 'True') {\r\n                    const group = response.data.data.group;\r\n                    const number = response.data.data.number;\r\n                    Swal.fire({\r\n                        title: '提示',\r\n                        text: `注册成功，编号为第${group}组第${number}企业！`,\r\n                        icon: 'success'\r\n                    });\r\n                    setTimeout(goToLogin, 4000); // 注册成功后跳转到登录页\r\n                } else {\r\n                    Swal.fire({\r\n                        title: '提示',\r\n                        text: response.data.data.registertxt || '未知错误', // 显示注册失败的信息\r\n                        icon: 'error'\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(error); // 记录错误信息\r\n                Swal.fire({\r\n                    title: '提示',\r\n                    text: '注册失败，请重试！', // 设置错误提示\r\n                    icon: 'error'\r\n                });\r\n            }\r\n        };\r\n        \r\n        const goToLogin = () => {\r\n            router.push('/login');\r\n        };\r\n        \r\n        return {\r\n            className,\r\n            studentID,\r\n            name,\r\n            teamName,\r\n            password,\r\n            phone,\r\n            register,\r\n            goToLogin,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f4f4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.container {\r\n    position: absolute;\r\n    top: 50%; \r\n    left: 50%; \r\n    transform: translate(-50%, -50%); \r\n    width: 300px;\r\n    padding: 20px;\r\n    background-color: white;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n    text-align: center;\r\n}\r\n\r\nbutton {\r\n  width: 100px;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"mappings":";AAuDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,aAAa;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIH,SAAS,CAAC,CAAC;IAC1B,MAAMI,SAAQ,GAAIN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,SAAQ,GAAIP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,IAAG,GAAIR,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,QAAO,GAAIV,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMW,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMY,KAAI,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMa,QAAO,GAAI,MAAAA,CAAA,KAAY;MACzB,MAAMC,OAAM,GAAI;QACZC,OAAO,EAAET,SAAS,CAACU,KAAK;QACxBC,SAAS,EAAEV,SAAS,CAACS,KAAK;QAC1BR,IAAI,EAAEA,IAAI,CAACQ,KAAK;QAChBE,QAAQ,EAAET,QAAQ,CAACO,KAAK;QACxBG,GAAG,EAAET,QAAQ,CAACM,KAAK;QACnBL,KAAK,EAAEA,KAAK,CAACK,KAAK;QAClBJ,KAAK,EAAEA,KAAK,CAACI;MACjB,CAAC;MACD,IAAI;QACA,MAAMI,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,kBAAkB,EAAEP,OAAO,EAAE;UAC3DQ,eAAe,EAAE;QACrB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,IAAI,CAACC,MAAK,KAAM,MAAM,EAAE;UACjC,MAAMC,KAAI,GAAIL,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACE,KAAK;UACtC,MAAMC,MAAK,GAAIN,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACG,MAAM;UACxCvB,IAAI,CAACwB,IAAI,CAAC;YACNC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,YAAYJ,KAAK,KAAKC,MAAM,KAAK;YACvCI,IAAI,EAAE;UACV,CAAC,CAAC;UACFC,UAAU,CAACC,SAAS,EAAE,IAAI,CAAC,EAAE;QACjC,OAAO;UACH7B,IAAI,CAACwB,IAAI,CAAC;YACNC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAET,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACU,WAAU,IAAK,MAAM;YAAE;YAChDH,IAAI,EAAE;UACV,CAAC,CAAC;QACN;MACJ,EAAE,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,EAAE;QACtB/B,IAAI,CAACwB,IAAI,CAAC;UACNC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE,WAAW;UAAE;UACnBC,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IACJ,CAAC;IAED,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACpB3B,MAAM,CAAC+B,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,OAAO;MACH9B,SAAS;MACTC,SAAS;MACTC,IAAI;MACJC,QAAQ;MACRC,QAAQ;MACRC,KAAK;MACLE,QAAQ;MACRmB;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}